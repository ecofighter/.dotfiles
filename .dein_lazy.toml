[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
if = 'has("python3")'
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'neoyank.vim']
hook_post_source = '''
  " the silver searcher on file_rec source
  call denite#custom#var('file_rec', 'command',
      \ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
  
  " Ripgrep command on grep source
  call denite#custom#var('grep', 'command', ['rg'])
  call denite#custom#var('grep', 'default_opts',
      \ ['--vimgrep', '--no-heading', '--follow'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
'''
hook_add = '''
  nnoremap [denite] <Nop>
  nmap <Leader>d [denite]
  nmap <C-p> :<C-u>Denite file_rec file_mru<CR>
  nmap <silent>[denite]f :<C-u>Denite file_rec<CR>
  nmap <silent>[denite]m :<C-u>Denite file_mru<CR>
  nmap <silent>[denite]b :<C-u>Denite buffer<CR>
  nmap <silent>[denite]g :<C-u>Denite grep<CR>
  nmap <silent>[denite]c :<C-u>DeniteCursorWord grep<CR>
  nmap <silent>[denite]r :<C-u>Denite -resume<CR>
'''

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
  set conceallevel=2 concealcursor=niv
  endif
'''
on_i = 1
on_ft = ['snippet']

[[plugins]]
repo = 'thinca/vim-quickrun'
on_path = '.*'
hook_add = '''
let g:quickrun_config = get(g:, 'quickrun_config', {})
let g:quickrun_config = {
  \ "_" : {
    \ 'runner'    : 'vimproc',
    \ 'runner/vimproc/updatetime' : 60,
    \ 'outputter' : 'error',
    \ 'outputter/error/success' : 'buffer',
    \ 'outputter/error/error'   : 'quickfix',
    \ 'outputter/buffer/split'  : ':rightbelow 8sp',
    \ 'outputter/buffer/close_on_empty' : 1,
    \ },
  \ "tex" : {
    \ 'runner'    : 'vimproc',
    \ 'command'   : 'latexmk',
    \ 'outputter' : 'error',
    \ 'outputter/error/success' : 'null',
    \ 'outputter/error/error'   : 'quickfix',
    \ 'srcfile' : expand("%"),
    \ 'cmdopt'  : '-pdf',
    \ 'hook/sweep/files'  : [
      \                       '%S:p:r.aux',
    \                       '%S:p:r.bbl',
    \                       '%S:p:r.blg',
    \                       '%S:p:r.dvi',
    \                       '%S:p:r.fdb_latexmk',
    \                       '%S:p:r.fls',
    \                       '%S:p:r.log',
    \                       '%S:p:r.out'
      \                       ],
      \ 'exec'  : '%c %o %a %s',
      \ },
  \ }
'''

[[plugins]]
repo = 'neovimhaskell/haskell-vim'
on_ft = 'haskell'

[[plugins]]
repo = 'eagletmt/neco-ghc'
on_ft = 'haskell'

[[plugins]] 
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = 'rust'
hook_add = '''
  set hidden
  let g:racer_cmd = '$HOME/.cargo/bin/racer'
  let $RUST_SRC_PATH = "/usr/src/rust/src"
'''

[[plugins]]
repo = 'lervag/vimtex'
on_path = '.tex'
hook_source = '''
  let g:vimtex_latexmk_options = '-pdf'
  let g:vimtex_latexmk_continuous = 1
  let g:vimtex_latexmk_background = 1
'''
