[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
if = 'has("nvim")'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000

  inoremap <silent><expr> <TAB>
  \ pumvisible() ? "\<C-n>" :
  \ <SID>check_back_space() ? "\<TAB>" :
  \ deoplete#mappings#manual_complete()

  function! s:check_back_space() abort "{{{
    let col = col('.') - 1
    return !col || getline('.')[col - 1] =~ '\s'
  endfunction"}}}
'''

[[plugins]]
repo = 'w0rp/ale'
on_i = 1
hook_add = """
  let g:ale_set_loclist = 1
  let g:ale_set_quickfix = 0
  let g:ale_open_list = 1
  let g:ale_linters = {
    \ 'haskell': ['hlint', 'stack-ghc-mod'],
    \ 'rust': ['cargo',],
    \ 'elixir': ['credo']
  \}
  nmap <silent> <C-n> <Plug>(ale_next_wrap)
  nmap <silent> <C-n> <Plug>(ale_previous_wrap)
"""

[[plugins]]
repo = 'thinca/vim-quickrun'
if = '!has("nvim")'
on_path = '.*'
hook_add =  '''
            let g:quickrun_config = get(g:, 'quickrun_config', {})
            let g:quickrun_config = {
              \ "_" : {
                \ 'runner'    : 'vimproc',
                \ 'runner/vimproc/updatetime' : 60,
                \ 'outputter' : 'error',
                \ 'outputter/error/success' : 'buffer',
                \ 'outputter/error/error'   : 'quickfix',
                \ 'outputter/buffer/split'  : ':rightbelow 8sp',
                \ 'outputter/buffer/close_on_empty' : 1,
              \ },
              \ "tex" : {
                \ 'runner'    : 'vimproc',
                \ 'command'   : 'latexmk',
                \ 'outputter' : 'error',
                \ 'outputter/error/success' : 'null',
                \ 'outputter/error/error'   : 'quickfix',
                \ 'srcfile' : expand("%"),
                \ 'cmdopt'  : '-pdf',
                \ 'hook/sweep/files'  : [
                \                       '%S:p:r.aux',
                \                       '%S:p:r.bbl',
                \                       '%S:p:r.blg',
                \                       '%S:p:r.dvi',
                \                       '%S:p:r.fdb_latexmk',
                \                       '%S:p:r.fls',
                \                       '%S:p:r.log',
                \                       '%S:p:r.out'
                \                       ],
                \ 'exec'  : '%c %o %a %s',
              \ },
            \ }
'''

[[plugins]]
repo = 'neovimhaskell/haskell-vim'
on_ft = 'haskell'
hook_add = '''
let g:haskellmode_completion_ghc = 0
'''

[[plugins]]
repo = 'eagletmt/neco-ghc'
on_ft = 'haskell'
hook_add = '''
let g:necoghc_enable_detailed_browse = 1
let g:necoghc_use_stack = 0
autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc
'''

[[plugins]]
repo = 'itchyny/vim-haskell-indent'
on_ft = 'haskell'

[[plugins]] 
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = 'rust'
hook_add = '''
set hidden
let g:racer_cmd = 'racer'
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex', 'plaintex']
hook_source = '''
              let g:vimtex_latexmk_options = '-pdf'
              let g:vimtex_latexmk_continuous = 1
              let g:vimtex_latexmk_background = 1
              '''

[[plugins]]
repo = "kovisoft/slimv"
on_ft = "lisp"
hook_source = '''
              let g:slimv_lisp = 'ros run'
              let g:slimv_impl = 'sbcl'
              let g:slimv_swank_cmd = 'T ros -s swank -e "(swank:create-server :port 4005 :dont-close t)" wait'
              let g:slimv_repl_split = 4
              let g:paraedit_electric_return = 0
              '''

[[plugins]]
repo = "ElmCast/elm-vim"
on_ft = "elm"
hook_source = '''
              let g:elm_setup_keybindings = 0
              '''

[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = ["elixir", "eelixir"]

[[plugins]]
repo = 'slashmili/alchemist.vim'
on_ft = ["elixir", "eelixir"]
